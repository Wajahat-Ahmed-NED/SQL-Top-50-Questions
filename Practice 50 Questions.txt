/****** Script for SelectTopNRows command from SSMS  ******/
--1 select first_name as workerName from worker;

--2 select UPPER(first_name) as workerName from worker;

-- Q-3. Write an SQL query to fetch unique values of DEPARTMENT from Worker table.
--select distinct department from worker;

-- Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from Worker table.
--select substring(first_name,1,3) from worker;

-- Q-5. Write an SQL query to find the position of the alphabet (‘b’) in the first name column ‘Amitabh’ from Worker table.
--select INSTR(first_name,'B') from worker where first_name = 'Amitabh';

-- Q-6. Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.
--select RTRIM(first_name) from worker;

-- Q-7. Write an SQL query to print the DEPARTMENT from Worker table after removing white spaces from the left side.
--select LTRIM(first_name) from worker;

-- Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.
--select distinct department, LENGTH(department) from worker;

-- Q-9. Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’.
--select REPLACE(first_name,'a','A') from worker;

-- Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from Worker table into a single column COMPLETE_NAME.
--select concat(first_name,' ',last_name) as WorkerName from worker;

-- Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
--select * from worker order by first_name ;

-- Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
--select * from worker order by first_name asc, DEPARTMENT desc;

-- Q-13. Write an SQL query to print details for Workers with the first name as “Vipul” and “Satish” from Worker table.
--select * from worker where first_name IN ('Vipul','Satish');

-- Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
--select * from worker where first_name NOT IN ('Vipul', 'Satish');

-- Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin*”.
--select * from worker where department LIKE 'Admin%';

-- Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
--select * from worker where FIRST_NAME LIKE '%a%';

-- Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
--select * from worker where first_name like '%a';

-- Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
--select * from worker where first_name like '_____h';

-- Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
--select * from worker where salary between 100000 and 500000;

-- Q-20. Write an SQL query to print details of the Workers who have joined in Feb’2014.
--select * from worker where Year(JOINING_DATE)=2020 and month(JOINING_DATE)=02;

-- Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
--select department,count(*) from worker group by department having department='Admin';

-- Q-22. Write an SQL query to fetch worker full names with salaries >= 50000 and <= 100000.
--select concat(first_name,' ',last_name),salary from worker where salary >=50000 and salary<=100000;

-- Q-23. Write an SQL query to fetch the no. of workers for each department in the descending order.
--select department,count(*) count from worker group by department order by department desc;

-- Q-24. Write an SQL query to print details of the Workers who are also Managers.
--select w.* from worker w Inner Join Title t on w.worker_id=t.WORKER_REF_ID where t.WORKER_TITLE='Manager';

-- Q-25. Write an SQL query to fetch number (more than 1) of same titles in the ORG of different types.
--select department, count(*) from worker group by department having count(*)>1;
--select * from title;
--select worker_title, count(*) from title group by worker_title having count (*) >1;

-- Q-26. Write an SQL query to show only odd rows from a table.
--select * from worker where WORKER_ID%2<>0;

-- Q-27. Write an SQL query to show only even rows from a table. 
--select * from worker where WORKER_ID%2=0;

-- Q-28. Write an SQL query to clone a new table from another table.
--create table worker_clone2 like worker;
--Insert into worker_clone2 select * from worker;
--select * from worker_clone

-- Q-29. Write an SQL query to fetch intersecting records of two tables.
--select * from worker w inner join worker_clone wc on w.worker_id=wc.worker_id;

-- Q-30. Write an SQL query to show records from one table that another table does not have.
--select * from worker w left join bonus b on w.worker_id=b.worker_ref_id where b.WORKER_REF_ID is NULL;

-- Q-31. Write an SQL query to show the current date and time.

--select getDate();
--select convert(time,getDate());

-- Q-32. Write an SQL query to show the top n (say 5) records of a table order by descending salary.
--select top(5) * from worker order by salary desc;

-- Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
--select top(1) salary from worker where salary IN (select top(5) salary from worker order by salary desc);

-- Q-34. Write an SQL query to determine the 5th highest salary without using LIMIT keyword.
--select salary from worker w1 where 5=(
--select count(*) from worker w2 where w1.salary<=w2.salary);

--select * from worker order by salary desc;

--select count(Distinct(salary)) from worker w2 where 100000>=w2.salary

-- Q-35. Write an SQL query to fetch the list of employees with the same salary.
--select w.* from worker w inner join worker w1 on w.salary=w1.salary and w.WORKER_ID<>w1.WORKER_ID;

-- Q-36. Write an SQL query to show the second highest salary from a table using sub-query.
--select  min(salary) from worker where salary In (select distinct top(2) salary from worker order by salary desc);

--select min(salary) from worker where salary IN (
--select top(5) salary from worker order by salary desc
--) ;

-- Q-37. Write an SQL query to show one row twice in results from a table.
--select * from worker union all select * from worker order by worker_id;

-- Q-38. Write an SQL query to list worker_id who does not get bonus.
--select * from worker w left join bonus b on w.worker_id=b.WORKER_REF_ID where b.WORKER_REF_ID is NULL;
--select * from bonus;

-- Q-39. Write an SQL query to fetch the first 50% records from a table.
--select * from worker where WORKER_ID <= ( select count(worker_id)/2 from worker);

-- Q-40. Write an SQL query to fetch the departments that have less than 4 people in it.
--select department,count(*) from worker group by department having count(*)<4;

-- Q-41. Write an SQL query to show all departments along with the number of people in there.
--select department,count(*) from worker group by department 


-- Q-42. Write an SQL query to show the last record from a table.
--select * from worker where worker_id=(select max(worker_id) from worker);

-- Q-43. Write an SQL query to fetch the first row of a table.
-- select top(1) * from worker;
--or
-- select * from worker where worker_id=(select min(worker_id) from worker);

-- Q-44. Write an SQL query to fetch the last five records from a table.
-- select top(5) * from worker order by worker_id desc;

-- Q-45. Write an SQL query to print the name of employees having the highest salary in each department.
--select department, first_name, last_name, salary from worker where salary IN (select max(salary) from worker group by department);

--select w.department, w.first_name, w.salary from
 --(select max(salary) as maxsal, department from worker group by department) temp
--inner join worker w on temp.department = w.department and temp.maxsal = w.salary;

-- Q-46. Write an SQL query to fetch three max salaries from a table using co-related subquery
--select first_name, department, salary from worker w1 where salary IN ( select distinct top(3) salary from worker w2 order by salary desc) 

--select distinct salary from worker w1 where 3>=(select count(distinct salary) from
 --worker w2 where w1.salary<=w2.salary) order by w1.salary desc;

 -- Q-47. Write an SQL query to fetch three min salaries from a table using co-related subquery
 --select * from worker;
 --select distinct salary from worker w1 where 3>=(select count(distinct salary) from worker w2 where w1.salary>=w2.salary) order by w1.salary;

 -- Q-48. Write an SQL query to fetch nth max salaries from a table.
--select distinct salary from worker w1 where n>=(select count(distinct salary) from worker w2 where w1.salary<=w2.salary) order by w1.salary;

-- Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.
--select department, sum(SALARY) as TotalSalaries from worker group by department;

-- Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.
select distinct first_name,last_name, salary from worker where salary = (select max(salary) from worker);

